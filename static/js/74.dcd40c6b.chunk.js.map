{"version":3,"file":"static/js/74.dcd40c6b.chunk.js","mappings":"mLAIe,SAASA,EAAT,GAAsC,IAAZC,EAAW,EAAXA,QACvC,OACE,iBAAKC,KAAK,QAAQC,UAAU,UAA5B,WACE,gBAAKC,I,qhYAAiBC,MAAM,MAAMC,IAAI,sBACtC,cAAGC,KAAMN,EAASE,UAAU,OAA5B,SACGF,MAIR,C,oJCXc,SAASO,IACtB,OACE,SAAC,KAAD,CACEC,OAAO,MACPJ,MAAM,MACNK,OAAQ,CAAC,WAAY,UAAW,WAChCC,UAAU,6BACVC,OAAO,OACPC,aAAc,CACZC,SAAU,QACVC,IAAK,MACLC,KAAM,MACNC,UAAW,yBAEbC,aAAa,GACbC,SAAS,GAGd,C,sJCnBD,EAAuB,mBAAvB,EAAqD,uBAArD,EAAsF,sBAAtF,EAAmH,mBAAnH,EAAkJ,wB,SCQnI,SAASC,IACtB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA4BE,EAAAA,EAAAA,UAAS,MAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAA4BJ,EAAAA,EAAAA,UAASK,EAAAA,EAAAA,MAArC,eAAOC,EAAP,KAAeC,EAAf,KAqBA,OAnBAC,EAAAA,EAAAA,YAAU,WACRC,EAAAA,EAAAA,YACeX,GACZY,MAAK,SAAAC,GACgB,IAAhBA,EAAKC,QAITV,EAAUS,GACVJ,EAAUF,EAAAA,EAAAA,WAJRE,EAAUF,EAAAA,EAAAA,KAKb,IAEAQ,OAAM,SAAAV,GACLW,QAAQC,IAAIZ,GACZC,EAASD,GACTI,EAAUF,EAAAA,EAAAA,SACX,GACJ,GAAE,CAACP,EAASK,KAGX,gCACGG,IAAWD,EAAAA,EAAAA,UAAkB,SAACW,EAAA,EAAD,IAE7BV,IAAWD,EAAAA,EAAAA,WAAmB,SAACY,EAAA,EAAD,IAE9BX,IAAWD,EAAAA,EAAAA,WACV,eAAIzB,UAAWsC,EAAf,SACGjB,EAAOkB,KAAI,SAAAC,GAAK,OACf,gBAAmBxC,UAAWsC,EAA9B,WACE,gBACErC,IACEuC,EAAMC,aAAN,0CACuCD,EAAMC,cACzCC,EAENvC,IAAKqC,EAAMG,cACX3C,UAAWsC,KAEb,eAAItC,UAAWsC,EAAf,SAA6BE,EAAMG,iBACnC,cAAG3C,UAAWsC,EAAd,SAAiCE,EAAMI,cAXhCJ,EAAMK,GADA,MAiBpBnB,IAAWD,EAAAA,EAAAA,OACV,wBACE,uEAKT,C,kECxDcqB,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAAgCC,GAAhC,kFACQC,EAAS,CACbC,IAAI,qBACJC,OAAQ,CACNH,KAAAA,IAJN,UAOyBI,EAAAA,EAAAA,GAAMH,EAAQD,GAPvC,uBAOUK,EAPV,EAOUA,KAPV,kBAQSA,GART,kEAWeC,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAAkCC,EAAOP,GAAzC,kFACQC,EAAS,CACbC,IAAI,eACJC,OAAQ,CACNI,MAAAA,EACAP,KAAAA,IALN,UAQyBI,EAAAA,EAAAA,GAAMH,EAAQM,EAAOP,GAR9C,uBAQUK,EARV,EAQUA,KARV,kBASSA,GATT,kEAYeG,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA4BV,GAA5B,kFACQG,EAAS,CACbC,IAAI,SAAD,OAAWJ,IAFlB,UAIyBM,EAAAA,EAAAA,GAAMH,EAAQH,GAJvC,uBAIUO,EAJV,EAIUA,KAJV,kBAKSA,GALT,kEAQeI,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA2BX,GAA3B,kFACQG,EAAS,CACbC,IAAI,SAAD,OAAWJ,EAAX,aAFP,UAIyBM,EAAAA,EAAAA,GAAMH,EAAQH,GAJvC,uBAIUO,EAJV,EAIUA,KAJV,kBAKSA,EAAKrB,MALd,kEAQe0B,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA8BZ,GAA9B,kFACQG,EAAS,CACbC,IAAI,SAAD,OAAWJ,EAAX,aAFP,UAIyBM,EAAAA,EAAAA,GAAMH,EAAQH,GAJvC,uBAIUO,EAJV,EAIUA,KAJV,kBAKSA,EAAKM,SALd,kEA7CAP,EAAAA,EAAAA,SAAAA,QAFiB,gCAGjBA,EAAAA,EAAAA,SAAAA,OAAwB,CACtBQ,QAASC,mCACTC,SAAU,SAkDZ,IAAMhC,EAAa,CACjBiB,iBArDF,SAKgC,GAAjBA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,EAiDbO,mBAjDF,SAWkC,EAAnBA,GAAAA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,EAuCbE,aAvCF,SAY4B,GAAbA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,EA4BbC,YA5BF,SAQ2B,GAAZA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,EAqBbC,eArBF,SAQ8B,GAAfA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,GAgBf,K,qBC1DA,IAPe,CACbK,KAAM,OACNC,QAAS,UACTC,SAAU,WACVC,SAAU,W","sources":["components/Error/Error.js","components/Loader/Loader.js","webpack://react-homework-template/./src/modules/Cast/Cast.module.css?ce81","modules/Cast/Cast.js","services/apiService.js","services/status.js"],"sourcesContent":["import PropTypes from 'prop-types';\nimport errorImage from '../../img/no_results_found.png';\nimport './Error.css';\n\nexport default function ErrorComponent({ message }) {\n  return (\n    <div role=\"alert\" className=\"wrapper\">\n      <img src={errorImage} width=\"400\" alt=\"no results found\" />\n      <p text={message} className=\"text\">\n        {message}\n      </p>\n    </div>\n  );\n}\n\nErrorComponent.propTypes = {\n  textError: PropTypes.string.isRequired,\n};\n","import { RotatingTriangles } from 'react-loader-spinner';\n\nexport default function LoaderComponent() {\n  return (\n    <RotatingTriangles\n      height=\"180\"\n      width=\"180\"\n      colors={['#fa7584;', '#6eb9fc', '#fd957d']}\n      ariaLabel=\"rotating-triangels-loading\"\n      radius=\"12.5\"\n      wrapperStyle={{\n        position: 'fixed',\n        top: '50%',\n        left: '50%',\n        transform: 'translate(-50%, -50%)',\n      }}\n      wrapperClass=\"\"\n      visible={true}\n    />\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"cast\":\"Cast_cast__1KzoU\",\"castItem\":\"Cast_castItem__ppL2D\",\"castImg\":\"Cast_castImg__Zz-r3\",\"name\":\"Cast_name__FDwnw\",\"character\":\"Cast_character__vuBWQ\"};","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport apiService from '../../services/apiService';\nimport Status from '../../services/status';\nimport LoaderComponent from '../../components/Loader';\nimport ErrorComponent from '../../components/Error';\nimport noPhoto from '../../img/no_image.jpg';\nimport styles from './Cast.module.css';\n\nexport default function Cast() {\n  const { movieId } = useParams();\n  const [actors, setActors] = useState(null);\n  const [error, setError] = useState(null);\n  const [status, setStatus] = useState(Status.IDLE);\n\n  useEffect(() => {\n    apiService\n      .getCastInfo(movieId)\n      .then(cast => {\n        if (cast.length === 0) {\n          setStatus(Status.IDLE);\n          return;\n        }\n        setActors(cast);\n        setStatus(Status.RESOLVED);\n      })\n\n      .catch(error => {\n        console.log(error);\n        setError(error);\n        setStatus(Status.REJECTED);\n      });\n  }, [movieId, error]);\n\n  return (\n    <>\n      {status === Status.PENDING && <LoaderComponent />}\n\n      {status === Status.REJECTED && <ErrorComponent />}\n\n      {status === Status.RESOLVED && (\n        <ul className={styles.cast}>\n          {actors.map(actor => (\n            <li key={actor.id} className={styles.castItem}>\n              <img\n                src={\n                  actor.profile_path\n                    ? `https://image.tmdb.org/t/p/w500/${actor.profile_path}`\n                    : noPhoto\n                }\n                alt={actor.original_name}\n                className={styles.castImg}\n              />\n              <h4 className={styles.name}>{actor.original_name}</h4>\n              <p className={styles.character}>{actor.character}</p>\n            </li>\n          ))}\n        </ul>\n      )}\n      {status === Status.IDLE && (\n        <p>\n          <i> We don't have any cast for this movie.</i>\n        </p>\n      )}\n    </>\n  );\n}\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\naxios.defaults.baseURL = BASE_URL;\naxios.defaults.params = {\n  api_key: process.env.REACT_APP_TMDB_API_KEY,\n  language: 'en-US',\n};\n\nasync function getPopularMovies(page) {\n  const config = {\n    url: `trending/movie/day`,\n    params: {\n      page,\n    },\n  };\n  const { data } = await axios(config, page);\n  return data;\n}\n\nasync function getMoviesByKeyWord(query, page) {\n  const config = {\n    url: `search/movie`,\n    params: {\n      query,\n      page,\n    },\n  };\n  const { data } = await axios(config, query, page);\n  return data;\n}\n\nasync function getMovieById(id) {\n  const config = {\n    url: `movie/${id}`,\n  };\n  const { data } = await axios(config, id);\n  return data;\n}\n\nasync function getCastInfo(id) {\n  const config = {\n    url: `movie/${id}/credits`,\n  };\n  const { data } = await axios(config, id);\n  return data.cast;\n}\n\nasync function getMovieReview(id) {\n  const config = {\n    url: `movie/${id}/reviews`,\n  };\n  const { data } = await axios(config, id);\n  return data.results;\n}\n\nconst apiService = {\n  getPopularMovies,\n  getMoviesByKeyWord,\n  getMovieById,\n  getCastInfo,\n  getMovieReview,\n};\n\nexport default apiService;\n","const Status = {\n  IDLE: 'idle',\n  PENDING: 'pending',\n  RESOLVED: 'resolved',\n  REJECTED: 'rejected',\n};\n\nexport default Status;\n"],"names":["ErrorComponent","message","role","className","src","width","alt","text","LoaderComponent","height","colors","ariaLabel","radius","wrapperStyle","position","top","left","transform","wrapperClass","visible","Cast","movieId","useParams","useState","actors","setActors","error","setError","Status","status","setStatus","useEffect","apiService","then","cast","length","catch","console","log","Loader","Error","styles","map","actor","profile_path","noPhoto","original_name","character","id","getPopularMovies","page","config","url","params","axios","data","getMoviesByKeyWord","query","getMovieById","getCastInfo","getMovieReview","results","api_key","process","language","IDLE","PENDING","RESOLVED","REJECTED"],"sourceRoot":""}