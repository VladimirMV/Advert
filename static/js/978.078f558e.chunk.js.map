{"version":3,"file":"static/js/978.078f558e.chunk.js","mappings":"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","sources":["components/Error/Error.js","components/Loader/Loader.js","webpack://react-homework-template/./src/components/MoviesList/MoviesList.module.css?de3d","components/MoviesList/MoviesList.js","webpack://react-homework-template/./src/components/SearchBar/SearchBar.module.css?35a0","components/SearchBar/SearchBar.js","webpack://react-homework-template/./src/pages/MoviesPage/MoviesPage.module.css?7ea7","pages/MoviesPage/MoviesPage.jsx","services/apiService.js","services/status.js"],"sourcesContent":["import PropTypes from 'prop-types';\nimport errorImage from '../../img/no_results_found.png';\nimport './Error.css';\n\nexport default function ErrorComponent({ message }) {\n  return (\n    <div role=\"alert\" className=\"wrapper\">\n      <img src={errorImage} width=\"400\" alt=\"no results found\" />\n      <p text={message} className=\"text\">\n        {message}\n      </p>\n    </div>\n  );\n}\n\nErrorComponent.propTypes = {\n  textError: PropTypes.string.isRequired,\n};\n","import { RotatingTriangles } from 'react-loader-spinner';\n\nexport default function LoaderComponent() {\n  return (\n    <RotatingTriangles\n      height=\"180\"\n      width=\"180\"\n      colors={['#fa7584;', '#6eb9fc', '#fd957d']}\n      ariaLabel=\"rotating-triangels-loading\"\n      radius=\"12.5\"\n      wrapperStyle={{\n        position: 'fixed',\n        top: '50%',\n        left: '50%',\n        transform: 'translate(-50%, -50%)',\n      }}\n      wrapperClass=\"\"\n      visible={true}\n    />\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"moviesList\":\"MoviesList_moviesList__P6SP5\",\"poster\":\"MoviesList_poster__aewlD\",\"moviesItem\":\"MoviesList_moviesItem__r+0sq\",\"movieTitle\":\"MoviesList_movieTitle__CxO8p\",\"link\":\"MoviesList_link__8rTGX\"};","import styles from './MoviesList.module.css';\nimport noPhoto from '../../img/no_image.jpg';\nimport { NavLink } from 'react-router-dom';\n// import PropTypes from 'prop-types';\n\nexport default function MoviesList({ movies, location }) {\n  return (\n    <ul className={styles.moviesList}>\n      {movies.map(({ id, poster_path, title }) => (\n        <li key={id} className={styles.moviesItem}>\n          <NavLink\n            to={{ pathname: `/movies/${id}` }}\n            state={{ getBack: { ...location } }}\n            className={styles.link}\n          >\n            <img\n              src={\n                poster_path\n                  ? `https://image.tmdb.org/t/p/w500/${poster_path}`\n                  : noPhoto\n              }\n              alt={title}\n              className={styles.poster}\n            />\n            <span className={styles.movieTitle}>{title}</span>\n          </NavLink>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\n// MoviesList.propTypes = {\n//   movies: PropTypes.shape({\n//     poster_path: PropTypes.string,\n//     id: PropTypes.number.isRequired,\n//     title: PropTypes.string.isRequired,\n//   }).isRequired,\n//   location: PropTypes.objectOf(PropTypes.object).isRequired,\n// };\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"SearchBar_form__gW7Gj\",\"input\":\"SearchBar_input__bIy50\",\"button\":\"SearchBar_button__T7RTc\"};","import { useState } from 'react';\nimport { ToastContainer, toast } from 'react-toastify';\nimport PropTypes from 'prop-types';\nimport styles from './SearchBar.module.css';\nimport 'react-toastify/dist/ReactToastify.css';\n\nexport default function SearchBar({ onHandleSubmit, currQuery }) {\n  const [query, setQuery] = useState('');\n  const [done, setDone] = useState(false);\n\n  const handleChangeQuery = event => {\n    setQuery(event.currentTarget.value.toLowerCase());\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    if (query.trim() === '') {\n      toast.info('Please enter your query!');\n      return;\n    }\n\n    onHandleSubmit(query);\n  };\n\n  if (currQuery && !query && !done) {\n    setQuery(currQuery);\n    setDone(true);\n  }\n\n  return (\n    <form onSubmit={handleSubmit} className={styles.form}>\n      <input\n        type=\"text\"\n        value={query}\n        autoComplete=\"off\"\n        autoFocus\n        placeholder=\"Enter movie name...\"\n        onChange={handleChangeQuery}\n        className={styles.input}\n      />\n      <button type=\"submit\" className={styles.button}>\n        Search\n      </button>\n      <ToastContainer />\n    </form>\n  );\n}\n\nSearchBar.propTypes = {\n  onHandleSubmit: PropTypes.func.isRequired,\n  currQuery: PropTypes.string,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"pagination\":\"MoviesPage_pagination__2j6d3\"};","import { useState, useEffect } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\n\nimport apiService from '../../services/apiService';\nimport { Pagination } from '@mui/material'; \nimport Status from '../../services/status';\nimport LoaderComponent from '../../components/Loader';\nimport ErrorComponent from '../../components/Error';\nimport SearchBar from '../../components/SearchBar';\nimport styles from './MoviesPage.module.css';\nimport MoviesList from '../../components/MoviesList/MoviesList';\n\nexport default function  Movies  ()  {\n\n  const navigate = useNavigate();\n  const location = useLocation();\n  const [query, setQuery] = useState('');\n  const [totalPage, setTotalPage] = useState(0);\n  const [movies, setMovies] = useState(null);\n  const [error, setError] = useState(null);\n  const [status, setStatus] = useState(Status.IDLE);\n  const page = new URLSearchParams(location.search).get('page') ?? 1;\n\n  useEffect(() => {\n    const newSearch = new URLSearchParams(location.search).get('query');\n    setQuery(newSearch, page);\n  }, [location.search, page]);\n\n  useEffect(() => {\n    if (!query) return;\n    setStatus(Status.PENDING);\n    apiService\n      .getMoviesByKeyWord(query, page)\n      .then(({ results, total_pages }) => {\n        if (results.length === 0) {\n          setError(`No results to show for \"${query}!\"`);\n          setStatus(Status.REJECTED);\n          return;\n        }\n        setMovies(results);\n        setTotalPage(total_pages);\n        setStatus(Status.RESOLVED);\n      })\n      .catch(error => {\n        console.log(error);\n        setError(error.message);\n        setStatus(Status.REJECTED);\n      });\n  }, [query, page]);\n\n  const searchImages = newSearch => {\n    if (query === newSearch) return;\n    setQuery(newSearch);\n    setMovies(null);\n    setError(null);\n    setStatus(Status.IDLE);\n  };\n\n  const onHandlePage = (event, page) => {\n    navigate({ ...location, search: `query=${query}&page=${page}` });\n  };\n\n  return (\n    <>\n      <SearchBar onHandleSubmit={searchImages} currQuery={query} />\n      {status === Status.PENDING && <LoaderComponent />}\n      {status === Status.REJECTED && (\n        <ErrorComponent message={error} textError=\"Error\" />\n      )}\n      {status === Status.RESOLVED && (\n        <>\n          <MoviesList\n          movies={movies}\n          location={location}\n        /> \n          \n          {totalPage > 1 && (\n            <Pagination\n              className={styles.pagination}\n              color='primary'\n              count={totalPage}\n              onChange={onHandlePage}\n              page={Number(page)}\n              showFirstButton\n              showLastButton\n              size=\"large\"\n            />\n          )}\n        </>\n      )}\n    </>\n  );\n}","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\naxios.defaults.baseURL = BASE_URL;\naxios.defaults.params = {\n  api_key: process.env.REACT_APP_TMDB_API_KEY,\n  language: 'en-US',\n};\n\nasync function getPopularMovies(page) {\n  const config = {\n    url: `trending/movie/day`,\n    params: {\n      page,\n    },\n  };\n  const { data } = await axios(config, page);\n  return data;\n}\n\nasync function getMoviesByKeyWord(query, page) {\n  const config = {\n    url: `search/movie`,\n    params: {\n      query,\n      page,\n    },\n  };\n  const { data } = await axios(config, query, page);\n  return data;\n}\n\nasync function getMovieById(id) {\n  const config = {\n    url: `movie/${id}`,\n  };\n  const { data } = await axios(config, id);\n  return data;\n}\n\nasync function getCastInfo(id) {\n  const config = {\n    url: `movie/${id}/credits`,\n  };\n  const { data } = await axios(config, id);\n  return data.cast;\n}\n\nasync function getMovieReview(id) {\n  const config = {\n    url: `movie/${id}/reviews`,\n  };\n  const { data } = await axios(config, id);\n  return data.results;\n}\n\nconst apiService = {\n  getPopularMovies,\n  getMoviesByKeyWord,\n  getMovieById,\n  getCastInfo,\n  getMovieReview,\n};\n\nexport default apiService;\n","const Status = {\n  IDLE: 'idle',\n  PENDING: 'pending',\n  RESOLVED: 'resolved',\n  REJECTED: 'rejected',\n};\n\nexport default Status;\n"],"names":["ErrorComponent","message","role","className","src","width","alt","text","LoaderComponent","height","colors","ariaLabel","radius","wrapperStyle","position","top","left","transform","wrapperClass","visible","MoviesList","movies","location","styles","map","id","poster_path","title","to","pathname","state","getBack","noPhoto","SearchBar","onHandleSubmit","currQuery","useState","query","setQuery","done","setDone","onSubmit","event","preventDefault","trim","toast","type","value","autoComplete","autoFocus","placeholder","onChange","currentTarget","toLowerCase","Movies","navigate","useNavigate","useLocation","totalPage","setTotalPage","setMovies","error","setError","Status","status","setStatus","page","URLSearchParams","search","get","useEffect","newSearch","apiService","then","results","total_pages","length","catch","console","log","Loader","Error","textError","Pagination","color","count","Number","showFirstButton","showLastButton","size","getPopularMovies","config","url","params","axios","data","getMoviesByKeyWord","getMovieById","getCastInfo","cast","getMovieReview","api_key","process","language","IDLE","PENDING","RESOLVED","REJECTED"],"sourceRoot":""}