{"version":3,"file":"static/js/674.bab6cfcf.chunk.js","mappings":"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","sources":["components/Error/Error.js","components/Loader/Loader.js","webpack://react-homework-template/./src/pages/HomePage/HomePage.module.css?5baa","pages/HomePage/HomePage.jsx","services/apiService.js","services/status.js"],"sourcesContent":["import PropTypes from 'prop-types';\nimport errorImage from '../../img/no_results_found.png';\nimport './Error.css';\n\nexport default function ErrorComponent({ message }) {\n  return (\n    <div role=\"alert\" className=\"wrapper\">\n      <img src={errorImage} width=\"400\" alt=\"no results found\" />\n      <p text={message} className=\"text\">\n        {message}\n      </p>\n    </div>\n  );\n}\n\nErrorComponent.propTypes = {\n  textError: PropTypes.string.isRequired,\n};\n","import { RotatingTriangles } from 'react-loader-spinner';\n\nexport default function LoaderComponent() {\n  return (\n    <RotatingTriangles\n      height=\"180\"\n      width=\"180\"\n      colors={['#fa7584;', '#6eb9fc', '#fd957d']}\n      ariaLabel=\"rotating-triangels-loading\"\n      radius=\"12.5\"\n      wrapperStyle={{\n        position: 'fixed',\n        top: '50%',\n        left: '50%',\n        transform: 'translate(-50%, -50%)',\n      }}\n      wrapperClass=\"\"\n      visible={true}\n    />\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"main\":\"HomePage_main__OiWfi\",\"title\":\"HomePage_title__UFLA3\",\"moviesList\":\"HomePage_moviesList__8MbkQ\",\"poster\":\"HomePage_poster__+X7mT\",\"moviesItem\":\"HomePage_moviesItem__RStzn\",\"movieTitle\":\"HomePage_movieTitle__oMj7q\",\"link\":\"HomePage_link__-d+Of\",\"pagination\":\"HomePage_pagination__rd-qL\"};","import React, { useEffect, useMemo, useState } from 'react';\nimport {NavLink, useLocation, useSearchParams,useNavigate } from 'react-router-dom';\n\nimport ErrorComponent from '../../components/Error/Error';\nimport LoaderComponent from '../../components/Loader';\nimport apiService from '../../services/apiService';\nimport Status from '../../services/status';\nimport styles from './HomePage.module.css';\nimport noPhoto from '../../img/no_image.jpg';\nimport { Pagination } from '@mui/material';\n\n\nexport default function Home  ()  {\n  const [movies, setMovies] = useState([]);\n  const [error, setError] = useState(false);\n  const [status, setStatus] = useState(Status.IDLE);\n  const [totalPage, setTotalPage] = useState(0);\n  const [searchParams , setSearchParams] = useSearchParams({ page: 1 });\n  const navigate = useNavigate();\n  const location = useLocation();\n  const params = useMemo(() => Object.fromEntries([...searchParams]), [searchParams]);\n  const page = Number(params.page || 1);\n\n  function handleSetSearchParams (page) {\n    setSearchParams({ page });\n  }\n\n  useEffect(() => {\n    setStatus(Status.PENDING);\n    apiService.getPopularMovies(page)\n      .then(({ results, total_pages }) => {\n        setMovies(results);\n        setTotalPage(total_pages);\n        setStatus(Status.RESOLVED);\n      })\n      .catch(error => {\n        console.log(error);\n        setError('Something went wrong. Please try again.');\n        setStatus(Status.REJECTED);\n      });\n  }, [page]);\n\n    function handlePage(event, page) {\n   \n      handleSetSearchParams(page);\n     \n    navigate({ ...location, search: `page=${page}` });\n  };\n \n\n  return (\n    <main className={styles.main}>\n      <h1 className={styles.title}>Trending today</h1>\n\n      {status === Status.PENDING && <LoaderComponent />}\n\n      {status === Status.REJECTED && <ErrorComponent message={error.message} textError=\"Error\" />}\n\n      {status === Status.RESOLVED && (\n      <>\n        <ul className={styles.moviesList}>\n          {movies.map(({id, poster_path, title}) => (\n            <li key={id} className={styles.moviesItem}> \n              \n              \n              <NavLink to={{ pathname: `/movies/${id}` }}\n                 state={{ getBack: { ...location } }}\n                className={styles.link}>\n                <img\n                  src={poster_path ? `https://image.tmdb.org/t/p/w500/${poster_path}` : noPhoto}\n                  alt={title}\n                  className={styles.poster}\n                />\n              <span className={styles.movieTitle}>{title}</span>\n            </NavLink>\n          </li>\n        ))}\n      </ul>\n      {totalPage > 1 && (\n        <Pagination\n          className={styles.pagination}\n          color='primary'\n          count={totalPage}\n          onChange={handlePage}\n          page={Number(page)}\n          showFirstButton\n          showLastButton\n          size=\"large\"\n        />\n      )}\n      </>\n    )}\n    </main>\n  );\n};\n\n ","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\naxios.defaults.baseURL = BASE_URL;\naxios.defaults.params = {\n  api_key: process.env.REACT_APP_TMDB_API_KEY,\n  language: 'en-US',\n};\n\nasync function getPopularMovies(page) {\n  try {\n    const config = {\n      url: `trending/movie/day`,\n      params: {\n        page,\n      },\n    };\n    const { data } = await axios(config, page);\n    return data;\n  } catch (error) {\n    console.log('error', { error });\n    return null;\n  }\n}\n\nasync function getMoviesByKeyWord(query, page) {\n  try {\n    const config = {\n      url: `search/movie`,\n      params: {\n        query,\n        page,\n      },\n    };\n    const { data } = await axios(config, query, page);\n    return data;\n  } catch (error) {\n    console.log('error', { error });\n    return null;\n  }\n}\n\nasync function getMovieById(id) {\n  try {\n    const config = {\n      url: `movie/${id}`,\n    };\n    const { data } = await axios(config, id);\n    return data;\n  } catch (error) {\n    console.log('error', { error });\n    return null;\n  }\n}\n\nasync function getCastInfo(id) {\n  try {\n    const config = {\n      url: `movie/${id}/credits`,\n    };\n    const { data } = await axios(config, id);\n    return data.cast;\n  } catch (error) {\n    console.log('error', { error });\n    return null;\n  }\n}\n\nasync function getMovieReview(id) {\n  try {\n    const config = {\n      url: `movie/${id}/reviews`,\n    };\n    const { data } = await axios(config, id);\n    return data.results;\n  } catch (error) {\n    console.log('error', { error });\n    return null;\n  }\n}\n\nconst apiService = {\n  getPopularMovies,\n  getMoviesByKeyWord,\n  getMovieById,\n  getCastInfo,\n  getMovieReview,\n};\n\nexport default apiService;\n","const Status = {\n  IDLE: 'idle',\n  PENDING: 'pending',\n  RESOLVED: 'resolved',\n  REJECTED: 'rejected',\n};\n\nexport default Status;\n"],"names":["ErrorComponent","message","role","className","src","width","alt","text","LoaderComponent","height","colors","ariaLabel","radius","wrapperStyle","position","top","left","transform","wrapperClass","visible","Home","useState","movies","setMovies","error","setError","Status","status","setStatus","totalPage","setTotalPage","useSearchParams","page","searchParams","setSearchParams","navigate","useNavigate","location","useLocation","params","useMemo","Object","fromEntries","Number","useEffect","apiService","then","results","total_pages","catch","console","log","styles","Loader","Error","textError","map","id","poster_path","title","to","pathname","state","getBack","noPhoto","Pagination","color","count","onChange","event","handleSetSearchParams","search","showFirstButton","showLastButton","size","getPopularMovies","config","url","axios","data","getMoviesByKeyWord","query","getMovieById","getCastInfo","cast","getMovieReview","api_key","process","language","IDLE","PENDING","RESOLVED","REJECTED"],"sourceRoot":""}